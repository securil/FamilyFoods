---
// 임시 제품 데이터 
const products = [
  {
    id: 1,
    name: "틴인틴",
    category: "과자류",
    description: "바삭하고 고소한 맛이 일품인 프리미엄 과자",
    image: "/images/product-1.jpg",
    isNew: false,
    isBest: true
  },
  {
    id: 2,
    name: "버터링 도넛츠",
    category: "과자류",
    description: "버터의 풍미가 가득한 도넛 모양 과자",
    image: "/images/product-2.jpg",
    isNew: true,
    isBest: false
  },
  {
    id: 3,
    name: "버터링 레드벨벳",
    category: "과자류",
    description: "레드벨벳 케이크 풍미의 프리미엄 과자",
    image: "/images/product-3.jpg",
    isNew: true,
    isBest: false
  },
  {
    id: 4,
    name: "아이스 초코바",
    category: "빙과류",
    description: "진한 초콜릿 맛의 프리미엄 아이스크림",
    image: "/images/product-4.jpg",
    isNew: false,
    isBest: true
  }
];

// 카테고리 목록
const categories = ["전체", "과자류", "빙과류", "낙농품", "빵류"];
---

<section id="products" class="section-padding bg-white">
  <div class="container-custom">
    <h2 class="section-title">
      훼미리의 <span class="text-family-orange">제품</span>을 소개합니다
    </h2>
    
    <div class="flex justify-center flex-wrap gap-4 mb-8">
      {categories.map((category, index) => (
        <button 
          class={`px-4 py-2 rounded-full transition-colors ${index === 0 ? 'bg-family-orange text-white' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}`}
          data-category={category === "전체" ? "all" : category}
        >
          {category}
        </button>
      ))}
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mt-8">
      {products.map((product, index) => (
        <div 
          data-aos="fade-up" 
          data-aos-delay={index * 100}
          class="group bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow"
        >
          <div class="relative h-48 overflow-hidden">
            <img 
              src={product.image || `/images/placeholder-product.jpg`}
              alt={product.name} 
              class="w-full h-full object-cover transition-transform group-hover:scale-105"
            />
            {product.isNew && (
              <span class="absolute top-2 left-2 bg-family-blue text-white text-sm font-medium px-2 py-1 rounded">NEW</span>
            )}
            {product.isBest && (
              <span class="absolute top-2 left-2 bg-family-orange text-white text-sm font-medium px-2 py-1 rounded">BEST</span>
            )}
          </div>
          <div class="p-4">
            <span class="text-xs font-medium text-gray-500">{product.category}</span>
            <h3 class="text-lg font-bold mb-2">{product.name}</h3>
            <p class="text-gray-600 text-sm mb-4">{product.description}</p>
            <a href={`/products/${product.id}`} class="text-family-orange font-medium hover:underline">
              자세히 보기 →
            </a>
          </div>
        </div>
      ))}
    </div>
    
    <div class="text-center mt-10">
      <a href="/products" class="btn-primary">
        모든 제품 보기
      </a>
    </div>
  </div>
</section>

<script>
  // 카테고리 필터링 기능
  document.addEventListener('DOMContentLoaded', () => {
    const categoryButtons = document.querySelectorAll('[data-category]');
    
    categoryButtons.forEach(button => {
      button.addEventListener('click', () => {
        // 버튼 스타일 변경
        categoryButtons.forEach(btn => {
          btn.classList.remove('bg-family-orange', 'text-white');
          btn.classList.add('bg-gray-100', 'text-gray-700', 'hover:bg-gray-200');
        });
        
        button.classList.remove('bg-gray-100', 'text-gray-700', 'hover:bg-gray-200');
        button.classList.add('bg-family-orange', 'text-white');
        
        // 실제 필터링 기능은 제품 데이터 연동 시 구현
      });
    });
  });
</script>
