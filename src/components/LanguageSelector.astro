---
import { prependBase } from '../utils/path-utils.js';

// 프롭스 정의 - 현재 언어 코드와 언어 링크 목록
interface Props {
  currentLocale: string;
  languageLinks: Array<{
    code: string;
    name: string;
    flag: string;
    url: string;
    active: boolean;
  }>;
}

// 프롭스 받기
const { 
  currentLocale = 'ko',
  languageLinks = []
} = Astro.props;

// 현재 언어 정보
const currentLanguage = languageLinks.find(lang => lang.code === currentLocale) || languageLinks[0];
---

<div class="language-selector">
  <div class="current-language">
    <img src={prependBase(currentLanguage.flag)} alt={currentLanguage.name} title={currentLanguage.name}>
    <span class="lang-name">{currentLanguage.name}</span>
    <i class="arrow-down"></i>
  </div>
  <div class="language-dropdown">
    {languageLinks.map(link => (
      <a href={link.url} class={link.active ? 'active' : ''} data-lang={link.code}>
        <img src={prependBase(link.flag)} alt={link.name} title={link.name}>
        <span>{link.name}</span>
      </a>
    ))}
  </div>
</div>

<style>
  .language-selector {
    position: relative;
    margin-left: 1rem;
    cursor: pointer;
    user-select: none;
  }
  
  .current-language {
    display: flex;
    align-items: center;
    padding: 0.5rem;
    border-radius: 4px;
    transition: background-color 0.2s;
  }
  
  .language-selector:hover .current-language {
    background-color: rgba(255, 255, 255, 0.1);
  }
  
  .current-language img {
    width: 24px;
    height: 16px;
    object-fit: cover;
    margin-right: 0.5rem;
    border-radius: 2px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  }
  
  .lang-name {
    margin-right: 0.5rem;
    font-size: 0.9rem;
  }
  
  .arrow-down {
    width: 0;
    height: 0;
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    border-top: 5px solid currentColor;
    margin-top: 2px;
  }
  
  .language-dropdown {
    position: absolute;
    top: 100%;
    right: 0;
    background-color: white;
    border-radius: 6px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    padding: 0.5rem 0;
    display: none;
    z-index: 100;
    min-width: 160px;
    margin-top: 0.5rem;
    opacity: 0;
    transform: translateY(-10px);
    transition: opacity 0.3s, transform 0.3s;
  }
  
  .language-selector:hover .language-dropdown {
    display: block;
    opacity: 1;
    transform: translateY(0);
  }
  
  .language-dropdown a {
    display: flex;
    align-items: center;
    padding: 0.6rem 1rem;
    text-decoration: none;
    color: #333;
    transition: background-color 0.2s;
  }
  
  .language-dropdown a:hover {
    background-color: #f5f5f5;
  }
  
  .language-dropdown a.active {
    background-color: #f0f0f0;
    font-weight: 500;
    color: var(--primary-color);
  }
  
  .language-dropdown img {
    width: 24px;
    height: 16px;
    object-fit: cover;
    margin-right: 0.8rem;
    border-radius: 2px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  }
  
  /* 반응형 스타일 */
  @media (max-width: 768px) {
    .lang-name {
      display: none;
    }
    
    .language-dropdown {
      right: -5px;
    }
  }
</style>

<script>
  // 언어 선택기 스크립트
  document.addEventListener('DOMContentLoaded', function() {
    const languageSelector = document.querySelector('.language-selector');
    const dropdown = document.querySelector('.language-dropdown');
    
    if (!languageSelector || !dropdown) return;
    
    // 모바일에서 클릭 이벤트
    let isOpen = false;
    languageSelector.addEventListener('click', function(e) {
      if (e.target.tagName === 'A' || e.target.closest('a')) return;
      
      if (isOpen) {
        dropdown.style.display = 'none';
        isOpen = false;
      } else {
        dropdown.style.display = 'block';
        isOpen = true;
      }
    });
    
    // 외부 클릭 시 닫기
    document.addEventListener('click', function(e) {
      if (!languageSelector.contains(e.target)) {
        dropdown.style.display = '';
        isOpen = false;
      }
    });
    
    // 언어 선택 시 로컬 스토리지에 저장
    document.querySelectorAll('.language-dropdown a').forEach(link => {
      link.addEventListener('click', function() {
        const lang = this.getAttribute('data-lang');
        if (lang) localStorage.setItem('selectedLanguage', lang);
      });
    });
  });
</script>

